// <auto-generated />
using SqlScript.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SqlScript.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221108184752_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SqlScript.Models.ConnectionString", b =>
                {
                    b.Property<int>("ConnectionStringID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConnectionStringID"));

                    b.Property<string>("ConnectionStringDataSource")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ConnectionStringInitialCatalog")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ConnectionStringName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ConnectionStringPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ConnectionStringUserID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ConnectionsId")
                        .HasColumnType("int");

                    b.HasKey("ConnectionStringID");

                    b.HasIndex("ConnectionsId");

                    b.ToTable("ConnectionString", "dbo");
                });

            modelBuilder.Entity("SqlScript.Models.Connections", b =>
                {
                    b.Property<int>("ConnectionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConnectionsId"));

                    b.Property<string>("ConnectionsAbbr")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ConnectionsName")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("ConnectionsId");

                    b.ToTable("Connections", "dbo");
                });

            modelBuilder.Entity("SqlScript.Models.ConnectionString", b =>
                {
                    b.HasOne("SqlScript.Models.Connections", "Connections")
                        .WithMany()
                        .HasForeignKey("ConnectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Connections");
                });
#pragma warning restore 612, 618
        }
    }
}
